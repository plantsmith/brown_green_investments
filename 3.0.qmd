---
title: "2.0"
description: "Utilize financial modeling tools and carbon accounting models to simulate investment returns and assess environmental impacts over a five-year period."
date: "2021-10-20"
format: 
  html:
    code-fold: false
    toc: true
    number-sections: true
    embed-resources: true
theme: Litera
editor: visual
execute:
  echo: true
  message: false
  warning: false
---

```{r}
# Load libraries
library(tidyverse)
library(quantmod)
library(dplyr)
```

# Define Portfolios

1.  Define the date range for the investment model

```{r}
#define the date range
start_date <- "2018-01-01"
end_date <- "2023-12-31"
```

2.  Build portfolios of brown and green firms.

Brown firms include: Exxon Mobil (XOM), Chevron (CVX), BP (BP), ConocoPhillips (COP), and Shell (SHEL).

Green firms include: NextEra Energy (NEE), Iberdrola (IBDRY), Enphase Energy (ENPH), Brookfield Renewable Partners (BEP), and First Solar (FSLR).

Carbon intensity was calculated by taking a company's total emissions across Scope 1, 2, and 3 for 2023 and dividing them by the company's revenue for the same period. Measured in tonnes of CO2 per unit of revenue

```{r}
# Define company tickers
tickers <- c("XOM", "CVX", "BP", "COP", "SHEL", "NEE", "IBDRY", "ENPH", "BEP", "FSLR")

# Define carbon intensities for each company (in tonnes of CO2 per unit of revenue)
emissions_intensity  <- c(
  XOM = 0.002,     # Exxon Mobil
  CVX = 0.008,    # Chevron
  BP = 0.002,     # BP
  COP = 0.004,    # ConocoPhillips
  SHEL = 0.004,    # Shell
  NEE = 0.002,     # NextEra Energy
  IBDRY = 0.001,    
  ENPH = 0.00003,  # Enphase Energy
  BEP = 0.000005,  # Brookfield Renewable Partners
  FSLR = 0.0013    # First Solar
)

# Social Cost of Carbon (SCC) in dollars per tonne of CO2
SCC <- 185
```

```{r}
#get data to build portfolios
#getSymbols = fetches historical stock data for these tickers from Yahoo Finance

for (ticker in tickers) {
  getSymbols(ticker, src = "yahoo", from = start_date, to = end_date)
}

```

3.  Merge the adjusted closing prices for all stocks in each portfolio into individual data frames

To compile adjusted closing prices for each stock in the portfolio, lapply() iterated through each ticker to retrieve stock data, extracting only Adjusted Close prices via Ad(). These prices were combined into a single data frame (prices) using do.call(merge, ...), aligning dates across stocks for consistency. Adjusted Close prices (ACP) reflect corporate actions like dividends and stock splits, providing a more accurate measure of each stock's value over time.

```{r}
# Merge adjusted closing prices for all tickers into a single data frame.
prices <- do.call(merge, lapply(tickers, function(ticker) Ad(get(ticker))))

```

4.  Calculate daily returns for each portfolio

Daily returns were calculated for each stock in both portfolios to assess day-to-day performance. These returns, representing the percentage change in Adjusted Close price from one day to the next, were generated using the ROC() function with type = "discrete" ensuring returns were calculated using the formula:

\$\$

\$\$

where:

-   Pt is the current price (Adjusted Close price at time t)
-   Pt-1 is the previous price (Adjusted Close price at time t-1)

```{r}
# Calculate daily returns for each stock 
returns <- na.omit(ROC(prices, type = "discrete"))
```

5.  Calculate Annualized Mean Returns for Each Portfolio

To assess annual performance, the mean daily returns for each portfolio were calculated and annualized by multiplying by 252, reflecting the typical number of trading days in a year.

```{r}
# Calculate annualized average return.
avg_return <- mean(returns) * 252
```

6.  Adjusted Standard Deviations for Monthly Returns

The monthly standard deviation of returns for each portfolio was calculated by dividing the annual standard deviation by the square root of 12, translating annual volatility into a monthly measure.

```{r}
# Calculate monthly volatility (standard deviation of returns).
sd_og <- sd(returns)
sd <- sd_og / sqrt(12)
```

# Set up the For Loop

7.  Specify parameters for the model:

```{r}
#set up initial variables
set.seed(123)  #for reproducibility
initial_investment <- 10000 # starting investment is 10k
n_scenarios <- 100  #number of scenarios to simulate
n_months <- 60  #simulation for 5 years (60 months)

# Initialize results list to store each scenario's data before combining
results_list <- vector("list", n_scenarios)
```

8.  Create a loop to run 100 investing scenarios over a 5 year time period:

```{r}
# Run scenarios to simulate random allocation
for (i in 1:n_scenarios) {
  # Random allocation for each company
  allocation <- runif(length(tickers))
  allocation <- allocation / sum(allocation)  # Normalize to sum to 1
  
  # Generate monthly returns for each company
  company_monthly_returns <- matrix(rnorm(n_months * length(tickers), avg_return / 12, sd / sqrt(12)),
                                    nrow = n_months, ncol = length(tickers))
  
  # Initialize portfolio value and returns
  portfolio_value <- initial_investment
  monthly_portfolio_returns <- numeric(n_months)
  
  # Initialize matrix and vectors
  company_final_returns <- numeric(length(tickers))
  company_portfolio_values <- matrix(0, nrow = n_months, ncol = length(tickers))
  emissions <- initial_investment * allocation * emissions_intensity
  environmental_cost_allocation <- emissions * SCC
  
  # Update portfolio value based on monthly returns and allocation
  for (j in 1:n_months) {
    company_returns_at_j <- company_monthly_returns[j, ]  # Returns for all companies at month j
    
    # Update portfolio and monthly return
    portfolio_monthly_return <- sum(company_returns_at_j * allocation)
    portfolio_value <- portfolio_value * (1 + portfolio_monthly_return)
    monthly_portfolio_returns[j] <- portfolio_monthly_return
    
    # Calculate individual company portfolio values
    for (k in 1:length(tickers)) {
      if (j == 1) {
        company_portfolio_values[j, k] <- initial_investment * allocation[k] * (1 + company_returns_at_j[k])
      } else {
        company_portfolio_values[j, k] <- company_portfolio_values[j - 1, k] * (1 + company_returns_at_j[k])
      }
    }
    
    # Accumulate final returns
    company_final_returns <- company_final_returns + company_returns_at_j * allocation
  }
  
  # Final calculations outside the monthly loop
  total_return <- (portfolio_value - initial_investment) / initial_investment
  total_enviro_cost_scenario <- sum(environmental_cost_allocation)
  company_final_portfolio_values <- company_portfolio_values[n_months, ]
  
  # Calculate volatilities
  company_volatilities <- apply(company_monthly_returns, 2, sd) * sqrt(12)  # Annualize
  portfolio_volatility <- sd(monthly_portfolio_returns) * sqrt(12)
  
  # Store results
  results_list[[i]] <- data.frame(
    scenario = i,
    company = tickers,
    allocation = allocation,
    final_portfolio_value = portfolio_value,
    total_return = total_return,
    company_final_return = company_final_returns,
    company_final_portfolio_value = company_final_portfolio_values,
    emissions = emissions,
    environmental_cost_allocation = environmental_cost_allocation,
    total_enviro_cost_scenario = total_enviro_cost_scenario,
    company_volatility = company_volatilities,
    scenario_volatility = portfolio_volatility
  )
}

# Combine all results
results <- do.call(rbind, results_list)

```

Monte Carlo simulations were conducted to model financial and environmental outcomes across 100 randomized scenarios over a 5-year period (60 months), starting with an initial investment of \$10,000. Monthly returns for each company were generated using a normal distribution based on historical average returns and standard deviations. In each scenario, allocations were randomly assigned across the 10 companies, and monthly returns were applied accordingly. At the end of each simulation, cumulative returns were determined by calculating the difference between the final portfolio value and the initial investment and then expressing it as a percentage of the initial investment. Emissions were calculated by multiplying each company’s initial investment by its allocation fraction and emissions intensity. The environmental costs were then determined by multiplying the calculated emissions by the Social Cost of Carbon (SCC). Volatility was calculated at both the company and portfolio levels by annualizing the standard deviation of monthly returns, with the portfolio’s volatility representing the combined risk of all companies.

------------------------------------------------------------------------

1.  **Allocation**:\
    The percentage of the total investment allocated to each company, normalized so that the sum of all allocations equals 1. This allocation determines the proportion of the total investment assigned to each company in the portfolio.

2.  **Final Portfolio Value**:\
    The total value of the investment portfolio at the end of the simulation period, accounting for all monthly returns and any compounding effects. Starting from an initial investment, the portfolio’s value is updated each month based on simulated returns. This value reflects the cumulative growth (or loss) of the initial investment, considering the compounding of monthly returns.\
    *Example*: If the final portfolio value were \$43,533.58, this means that at the end of the simulation period (e.g., 12 months or 5 years), the portfolio's value has grown to \$43,533.58 from the initial investment.

3.  **Total Return**:\
    The overall percentage change in the portfolio's value relative to its starting value over the simulation period. It represents the total gain or loss of the investment.\
    *Example*: A total return of 3.030271 means the portfolio has grown by 303.03% over the period, implying a significant increase in value.

4.  **Emissions**:\
    The total emissions generated by each company in the portfolio, calculated as:\
    \[ \text{Emissions} = \text{Initial Investment} \times \text{Allocation for Company} \times \text{Emissions Intensity for Company} \]\
    This quantifies the carbon emissions associated with the investment in each company based on its emissions intensity and the allocated amount of the portfolio.

5.  **Environmental Cost Allocation**:\
    The monetary cost associated with the environmental impact (emissions) for each company, calculated by multiplying the emissions for each company by the Social Cost of Carbon (SCC). The SCC represents the estimated monetary value of the damage caused by emitting one ton of CO2 (or equivalent greenhouse gases).\
    This measure helps quantify the financial implications of the environmental impact from each company, highlighting the "environmental burden" of investing in higher-emission companies. It enables investors to consider both financial returns and environmental impacts when making investment decisions.

6.  **Total Environmental Cost**:\
    The sum of the environmental costs for all companies in the portfolio, calculated by aggregating the environmental cost allocation for each company. This represents the overall financial impact of the portfolio’s emissions, providing insight into the total environmental burden associated with the portfolio.

7.  **Volatility**:\
    A statistical measure of the variation in the portfolio's returns over a given period, reflecting the level of risk associated with the portfolio. High volatility indicates significant fluctuations in returns, signifying higher risk, while low volatility means the portfolio's returns are more stable and predictable.\
    Volatility is calculated based on the standard deviation of monthly returns, annualized by multiplying by the square root of 12. This measure helps investors assess the uncertainty or risk associated with the portfolio's performance.

# Plots

```{r}
# List of green and brown companies
green_firms <- c("NEE", "IBDRY", "ENPH", "BEP", "FSLR")
brown_firms <- c("XOM", "CVX", "BP", "COP", "SHEL")
```

Individual returns for each company

```{r}
company_summary <- results %>%
  group_by(company) %>%
  summarise(
    mean_company_return = mean(company_final_return, na.rm = TRUE),
    mean_company_final_portfolio_value = mean(company_final_portfolio_value, na.rm = TRUE),
    mean_enviro_cost = mean(environmental_cost_allocation, na.rm = TRUE),
    mean_volatility = mean(company_volatility, na.rm = TRUE)  # Added for volatility
  ) %>%
  arrange(desc(mean_company_return))  # Sort by average return

```

```{r}
company_summary$firm_type <- ifelse(
  company_summary$company %in% green_firms, "Green",
  ifelse(company_summary$company %in% brown_firms, "Brown", "Other")
)

company_plot <- ggplot(company_summary, aes(x = reorder(company, mean_company_return), y = mean_company_return, fill = firm_type)) +
  geom_bar(stat = "identity") +
  scale_fill_manual(values = c("Green" = "seagreen", "Brown" = "peachpuff4")) +
  labs(title = "Mean Company Return Across Scenarios",
       x = "Company", y = "Mean Return", fill = "Firm Type") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))

ggsave("Mean_Company_Return_Across_Scenarios.png", plot = company_plot, width = 10, height = 6, dpi = 300)


company_plot
```

Portfolio Value Plot

```{r}
portfolio_value_plot <- ggplot(company_summary, aes(x = reorder(company, mean_company_final_portfolio_value), y = mean_company_final_portfolio_value, fill = firm_type)) +
  geom_bar(stat = "identity") +
  scale_fill_manual(values = c("Green" = "seagreen", "Brown" = "peachpuff4")) +
  labs(title = "Company Portfolio Growth",
       subtitle = "Mean Across 100 Scenarios Over 5 Years",
       x = "Company", y = "Mean Portfolio Growth ($)", fill = "Firm Type") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))

ggsave("company_portfolio_values_summary.png", plot = portfolio_value_plot, width = 10, height = 6, dpi = 300)

portfolio_value_plot

```

Environmental Cost Plot

```{r}

# Plot Mean Environmental Cost
environmental_plot <- ggplot(company_summary, aes(x = reorder(company, mean_enviro_cost), 
                                                  y = mean_enviro_cost, fill = firm_type)) +
  geom_bar(stat = "identity") +
  scale_fill_manual(values = c("Green" = "seagreen", "Brown" = "peachpuff4")) +
  labs(title = "Mean Environmental Cost Per Company", 
       subtitle = "Mean Across 100 Scenarios Over 5 Years",
       x = "Company", y = "Mean Environmental Cost ($)", fill = "Firm Type") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))

# Save the plot
ggsave("mean_environmental_costs.png", plot = environmental_plot, width = 10, height = 6, dpi = 300)

# Display the plot
environmental_plot


```

Environmental Cost vs Portfolio Growth

```{r}
scatter_plot <- ggplot(company_summary, aes(x = mean_enviro_cost, y = mean_company_final_portfolio_value, size = mean_volatility, color = company)) +
  geom_point(alpha = 0.7) +
  labs(
    title = "Company Portfolio Growth vs Environmental Cost",
    x = "Mean Environmental Cost ($)",
    y = "Mean Portfolio Growth ($)",
    size = "Volatility",
    color = "Firm Type"
  ) +
  theme_minimal() +
  theme(legend.position = "right")

ggsave("Portfolio_Growth_vs_Environmental_Cost.png", plot = scatter_plot, width = 10, height = 6, dpi = 300)

scatter_plot

```

```{r}
scatter_plot <- ggplot(company_summary, aes(x = mean_enviro_cost, y = mean_company_final_portfolio_value, size = mean_volatility, color = firm_type)) +
  geom_point(alpha = 0.7) +
  scale_color_manual(values = c("Green" = "seagreen", "Brown" = "peachpuff4")) +  # Manually setting colors for firm types
  geom_text(aes(label = company), hjust = 0.5, vjust = -1.05, size = 3) +  # Adding company names
  labs(
    title = "Company Portfolio Growth vs Environmental Cost",
    x = "Mean Environmental Cost ($)",
    y = "Mean Portfolio Growth ($)",
    size = "Volatility",
    color = "Firm Type"
  ) +
  theme_minimal() +
  theme(legend.position = "right")

ggsave("Portfolio_Growth_vs_Environmental_Cost.png", plot = scatter_plot, width = 10, height = 6, dpi = 300)

scatter_plot


```

```{r}
# Create the kable table with renamed columns for environmental costs
library(knitr)
library(kableExtra)
library(webshot)
library(here)

company_kable <- company_summary %>%
  kable(
    caption = "Company Summary over 100 Scenarios and 5 Years",
    col.names = c("Company", "Mean Return (%)", "Mean Portfolio Growth ($)", "Mean Environmental Cost ($)", "Mean Voltality", "Firm Type")
  ) %>%
  kable_styling("striped", full_width = FALSE)

save_kable(company_kable, file = here("company_summary.html"))webshot(here("company_summary.html"), file = here("company_summary.png"), vwidth = 800, vheight = 600)


```
